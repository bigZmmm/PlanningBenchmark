(define (domain hall-rotate)
  (:constants p1 p2 p3 p4)
  (:predicates (x-agent ?p) (y-agent ?p)
               (north) (east) (south) (west)
               (visited-A) (visited-B) (visited-C) (visited-D)
               (obs--)
               (not-obs---q0)
               (obs---q0-Forwd-q0)
               (obs---q0-TurnR-q0)
               (obs---q0-TurnL-q0)
               (obsA-)
               (not-obsA--q0)
               (obsA--q0-Forwd-q0)
               (obsA--q0-TurnR-q0)
               (obsA--q0-TurnL-q0)
               (obsB-)
               (not-obsB--q0)
               (obsB--q0-Forwd-q0)
               (obsB--q0-TurnR-q0)
               (obsB--q0-TurnL-q0)
               (obsC-)
               (not-obsC--q0)
               (obsC--q0-Forwd-q0)
               (obsC--q0-TurnR-q0)
               (obsC--q0-TurnL-q0)
               (obsD-)
               (not-obsD--q0)
               (obsD--q0-Forwd-q0)
               (obsD--q0-TurnR-q0)
               (obsD--q0-TurnL-q0)
               (obs-W)
               (not-obs-W-q0)
               (obs-W-q0-Forwd-q0)
               (obs-W-q0-TurnR-q0)
               (obs-W-q0-TurnL-q0)
               (obsAW)
               (not-obsAW-q0)
               (obsAW-q0-Forwd-q0)
               (obsAW-q0-TurnR-q0)
               (obsAW-q0-TurnL-q0)
               (obsBW)
               (not-obsBW-q0)
               (obsBW-q0-Forwd-q0)
               (obsBW-q0-TurnR-q0)
               (obsBW-q0-TurnL-q0)
               (obsCW)
               (not-obsCW-q0)
               (obsCW-q0-Forwd-q0)
               (obsCW-q0-TurnR-q0)
               (obsCW-q0-TurnL-q0)
               (obsDW)
               (not-obsDW-q0)
               (obsDW-q0-Forwd-q0)
               (obsDW-q0-TurnR-q0)
               (obsDW-q0-TurnL-q0)
               (q0)
  )

  (:action map----q0-Forwd-q0 :precondition (not-obs---q0) :effect (and (not (not-obs---q0)) (obs---q0-Forwd-q0)) )
  (:action app----q0-Forwd-q0
    :precondition (obs---q0-Forwd-q0)
    :effect (and (when (and (obs--) (q0) (north) (x-agent p1) (y-agent p2)) (and (not (y-agent p2)) (y-agent p1) (not (obs--))))
                 (when (and (obs--) (q0) (north) (x-agent p4) (y-agent p2)) (and (not (y-agent p2)) (y-agent p1) (not (obs--))))
                 (when (and (obs--) (q0) (north) (x-agent p1) (y-agent p3)) (and (not (y-agent p3)) (y-agent p2) (not (obs--))))
                 (when (and (obs--) (q0) (north) (x-agent p4) (y-agent p3)) (and (not (y-agent p3)) (y-agent p2) (not (obs--))))
                 (when (and (obs--) (q0) (north) (x-agent p1) (y-agent p4)) (and (not (y-agent p4)) (y-agent p3) (not (obs--))))
                 (when (and (obs--) (q0) (north) (x-agent p4) (y-agent p4)) (and (not (y-agent p4)) (y-agent p3) (not (obs--))))
                 (when (and (obs--) (q0) (south) (x-agent p1) (y-agent p1)) (and (not (y-agent p1)) (y-agent p2) (not (obs--))))
                 (when (and (obs--) (q0) (south) (x-agent p4) (y-agent p1)) (and (not (y-agent p1)) (y-agent p2) (not (obs--))))
                 (when (and (obs--) (q0) (south) (x-agent p1) (y-agent p2)) (and (not (y-agent p2)) (y-agent p3) (not (obs--))))
                 (when (and (obs--) (q0) (south) (x-agent p4) (y-agent p2)) (and (not (y-agent p2)) (y-agent p3) (not (obs--))))
                 (when (and (obs--) (q0) (south) (x-agent p1) (y-agent p3)) (and (not (y-agent p3)) (y-agent p4) (not (obs--))))
                 (when (and (obs--) (q0) (south) (x-agent p4) (y-agent p3)) (and (not (y-agent p3)) (y-agent p4) (not (obs--))))
                 (when (and (obs--) (q0) (east) (x-agent p1) (y-agent p1)) (and (not (x-agent p1)) (x-agent p2) (not (obs--))))
                 (when (and (obs--) (q0) (east) (x-agent p1) (y-agent p4)) (and (not (x-agent p1)) (x-agent p2) (not (obs--))))
                 (when (and (obs--) (q0) (east) (x-agent p2) (y-agent p1)) (and (not (x-agent p2)) (x-agent p3) (not (obs--))))
                 (when (and (obs--) (q0) (east) (x-agent p2) (y-agent p4)) (and (not (x-agent p2)) (x-agent p3) (not (obs--))))
                 (when (and (obs--) (q0) (east) (x-agent p3) (y-agent p1)) (and (not (x-agent p3)) (x-agent p4) (not (obs--))))
                 (when (and (obs--) (q0) (east) (x-agent p3) (y-agent p4)) (and (not (x-agent p3)) (x-agent p4) (not (obs--))))
                 (when (and (obs--) (q0) (west) (x-agent p2) (y-agent p1)) (and (not (x-agent p2)) (x-agent p1) (not (obs--))))
                 (when (and (obs--) (q0) (west) (x-agent p2) (y-agent p4)) (and (not (x-agent p2)) (x-agent p1) (not (obs--))))
                 (when (and (obs--) (q0) (west) (x-agent p3) (y-agent p1)) (and (not (x-agent p3)) (x-agent p2) (not (obs--))))
                 (when (and (obs--) (q0) (west) (x-agent p3) (y-agent p4)) (and (not (x-agent p3)) (x-agent p2) (not (obs--))))
                 (when (and (obs--) (q0) (west) (x-agent p4) (y-agent p1)) (and (not (x-agent p4)) (x-agent p3) (not (obs--))))
                 (when (and (obs--) (q0) (west) (x-agent p4) (y-agent p4)) (and (not (x-agent p4)) (x-agent p3) (not (obs--))))
                 
 ))
  (:action map-A--q0-Forwd-q0 :precondition (not-obsA--q0) :effect (and (not (not-obsA--q0)) (obsA--q0-Forwd-q0)) )
  (:action app-A--q0-Forwd-q0
    :precondition (obsA--q0-Forwd-q0)
    :effect (and (when (and (obsA-) (q0) (north) (x-agent p1) (y-agent p2)) (and (not (y-agent p2)) (y-agent p1) (not (obsA-))))
                 (when (and (obsA-) (q0) (north) (x-agent p4) (y-agent p2)) (and (not (y-agent p2)) (y-agent p1) (not (obsA-))))
                 (when (and (obsA-) (q0) (north) (x-agent p1) (y-agent p3)) (and (not (y-agent p3)) (y-agent p2) (not (obsA-))))
                 (when (and (obsA-) (q0) (north) (x-agent p4) (y-agent p3)) (and (not (y-agent p3)) (y-agent p2) (not (obsA-))))
                 (when (and (obsA-) (q0) (north) (x-agent p1) (y-agent p4)) (and (not (y-agent p4)) (y-agent p3) (not (obsA-))))
                 (when (and (obsA-) (q0) (north) (x-agent p4) (y-agent p4)) (and (not (y-agent p4)) (y-agent p3) (not (obsA-))))
                 (when (and (obsA-) (q0) (south) (x-agent p1) (y-agent p1)) (and (not (y-agent p1)) (y-agent p2) (not (obsA-))))
                 (when (and (obsA-) (q0) (south) (x-agent p4) (y-agent p1)) (and (not (y-agent p1)) (y-agent p2) (not (obsA-))))
                 (when (and (obsA-) (q0) (south) (x-agent p1) (y-agent p2)) (and (not (y-agent p2)) (y-agent p3) (not (obsA-))))
                 (when (and (obsA-) (q0) (south) (x-agent p4) (y-agent p2)) (and (not (y-agent p2)) (y-agent p3) (not (obsA-))))
                 (when (and (obsA-) (q0) (south) (x-agent p1) (y-agent p3)) (and (not (y-agent p3)) (y-agent p4) (not (obsA-))))
                 (when (and (obsA-) (q0) (south) (x-agent p4) (y-agent p3)) (and (not (y-agent p3)) (y-agent p4) (not (obsA-))))
                 (when (and (obsA-) (q0) (east) (x-agent p1) (y-agent p1)) (and (not (x-agent p1)) (x-agent p2) (not (obsA-))))
                 (when (and (obsA-) (q0) (east) (x-agent p1) (y-agent p4)) (and (not (x-agent p1)) (x-agent p2) (not (obsA-))))
                 (when (and (obsA-) (q0) (east) (x-agent p2) (y-agent p1)) (and (not (x-agent p2)) (x-agent p3) (not (obsA-))))
                 (when (and (obsA-) (q0) (east) (x-agent p2) (y-agent p4)) (and (not (x-agent p2)) (x-agent p3) (not (obsA-))))
                 (when (and (obsA-) (q0) (east) (x-agent p3) (y-agent p1)) (and (not (x-agent p3)) (x-agent p4) (not (obsA-))))
                 (when (and (obsA-) (q0) (east) (x-agent p3) (y-agent p4)) (and (not (x-agent p3)) (x-agent p4) (not (obsA-))))
                 (when (and (obsA-) (q0) (west) (x-agent p2) (y-agent p1)) (and (not (x-agent p2)) (x-agent p1) (not (obsA-))))
                 (when (and (obsA-) (q0) (west) (x-agent p2) (y-agent p4)) (and (not (x-agent p2)) (x-agent p1) (not (obsA-))))
                 (when (and (obsA-) (q0) (west) (x-agent p3) (y-agent p1)) (and (not (x-agent p3)) (x-agent p2) (not (obsA-))))
                 (when (and (obsA-) (q0) (west) (x-agent p3) (y-agent p4)) (and (not (x-agent p3)) (x-agent p2) (not (obsA-))))
                 (when (and (obsA-) (q0) (west) (x-agent p4) (y-agent p1)) (and (not (x-agent p4)) (x-agent p3) (not (obsA-))))
                 (when (and (obsA-) (q0) (west) (x-agent p4) (y-agent p4)) (and (not (x-agent p4)) (x-agent p3) (not (obsA-))))
                 
 ))
  (:action map-B--q0-Forwd-q0 :precondition (not-obsB--q0) :effect (and (not (not-obsB--q0)) (obsB--q0-Forwd-q0)) )
  (:action app-B--q0-Forwd-q0
    :precondition (obsB--q0-Forwd-q0)
    :effect (and (when (and (obsB-) (q0) (north) (x-agent p1) (y-agent p2)) (and (not (y-agent p2)) (y-agent p1) (not (obsB-))))
                 (when (and (obsB-) (q0) (north) (x-agent p4) (y-agent p2)) (and (not (y-agent p2)) (y-agent p1) (not (obsB-))))
                 (when (and (obsB-) (q0) (north) (x-agent p1) (y-agent p3)) (and (not (y-agent p3)) (y-agent p2) (not (obsB-))))
                 (when (and (obsB-) (q0) (north) (x-agent p4) (y-agent p3)) (and (not (y-agent p3)) (y-agent p2) (not (obsB-))))
                 (when (and (obsB-) (q0) (north) (x-agent p1) (y-agent p4)) (and (not (y-agent p4)) (y-agent p3) (not (obsB-))))
                 (when (and (obsB-) (q0) (north) (x-agent p4) (y-agent p4)) (and (not (y-agent p4)) (y-agent p3) (not (obsB-))))
                 (when (and (obsB-) (q0) (south) (x-agent p1) (y-agent p1)) (and (not (y-agent p1)) (y-agent p2) (not (obsB-))))
                 (when (and (obsB-) (q0) (south) (x-agent p4) (y-agent p1)) (and (not (y-agent p1)) (y-agent p2) (not (obsB-))))
                 (when (and (obsB-) (q0) (south) (x-agent p1) (y-agent p2)) (and (not (y-agent p2)) (y-agent p3) (not (obsB-))))
                 (when (and (obsB-) (q0) (south) (x-agent p4) (y-agent p2)) (and (not (y-agent p2)) (y-agent p3) (not (obsB-))))
                 (when (and (obsB-) (q0) (south) (x-agent p1) (y-agent p3)) (and (not (y-agent p3)) (y-agent p4) (not (obsB-))))
                 (when (and (obsB-) (q0) (south) (x-agent p4) (y-agent p3)) (and (not (y-agent p3)) (y-agent p4) (not (obsB-))))
                 (when (and (obsB-) (q0) (east) (x-agent p1) (y-agent p1)) (and (not (x-agent p1)) (x-agent p2) (not (obsB-))))
                 (when (and (obsB-) (q0) (east) (x-agent p1) (y-agent p4)) (and (not (x-agent p1)) (x-agent p2) (not (obsB-))))
                 (when (and (obsB-) (q0) (east) (x-agent p2) (y-agent p1)) (and (not (x-agent p2)) (x-agent p3) (not (obsB-))))
                 (when (and (obsB-) (q0) (east) (x-agent p2) (y-agent p4)) (and (not (x-agent p2)) (x-agent p3) (not (obsB-))))
                 (when (and (obsB-) (q0) (east) (x-agent p3) (y-agent p1)) (and (not (x-agent p3)) (x-agent p4) (not (obsB-))))
                 (when (and (obsB-) (q0) (east) (x-agent p3) (y-agent p4)) (and (not (x-agent p3)) (x-agent p4) (not (obsB-))))
                 (when (and (obsB-) (q0) (west) (x-agent p2) (y-agent p1)) (and (not (x-agent p2)) (x-agent p1) (not (obsB-))))
                 (when (and (obsB-) (q0) (west) (x-agent p2) (y-agent p4)) (and (not (x-agent p2)) (x-agent p1) (not (obsB-))))
                 (when (and (obsB-) (q0) (west) (x-agent p3) (y-agent p1)) (and (not (x-agent p3)) (x-agent p2) (not (obsB-))))
                 (when (and (obsB-) (q0) (west) (x-agent p3) (y-agent p4)) (and (not (x-agent p3)) (x-agent p2) (not (obsB-))))
                 (when (and (obsB-) (q0) (west) (x-agent p4) (y-agent p1)) (and (not (x-agent p4)) (x-agent p3) (not (obsB-))))
                 (when (and (obsB-) (q0) (west) (x-agent p4) (y-agent p4)) (and (not (x-agent p4)) (x-agent p3) (not (obsB-))))
                 
 ))
  (:action map-C--q0-Forwd-q0 :precondition (not-obsC--q0) :effect (and (not (not-obsC--q0)) (obsC--q0-Forwd-q0)) )
  (:action app-C--q0-Forwd-q0
    :precondition (obsC--q0-Forwd-q0)
    :effect (and (when (and (obsC-) (q0) (north) (x-agent p1) (y-agent p2)) (and (not (y-agent p2)) (y-agent p1) (not (obsC-))))
                 (when (and (obsC-) (q0) (north) (x-agent p4) (y-agent p2)) (and (not (y-agent p2)) (y-agent p1) (not (obsC-))))
                 (when (and (obsC-) (q0) (north) (x-agent p1) (y-agent p3)) (and (not (y-agent p3)) (y-agent p2) (not (obsC-))))
                 (when (and (obsC-) (q0) (north) (x-agent p4) (y-agent p3)) (and (not (y-agent p3)) (y-agent p2) (not (obsC-))))
                 (when (and (obsC-) (q0) (north) (x-agent p1) (y-agent p4)) (and (not (y-agent p4)) (y-agent p3) (not (obsC-))))
                 (when (and (obsC-) (q0) (north) (x-agent p4) (y-agent p4)) (and (not (y-agent p4)) (y-agent p3) (not (obsC-))))
                 (when (and (obsC-) (q0) (south) (x-agent p1) (y-agent p1)) (and (not (y-agent p1)) (y-agent p2) (not (obsC-))))
                 (when (and (obsC-) (q0) (south) (x-agent p4) (y-agent p1)) (and (not (y-agent p1)) (y-agent p2) (not (obsC-))))
                 (when (and (obsC-) (q0) (south) (x-agent p1) (y-agent p2)) (and (not (y-agent p2)) (y-agent p3) (not (obsC-))))
                 (when (and (obsC-) (q0) (south) (x-agent p4) (y-agent p2)) (and (not (y-agent p2)) (y-agent p3) (not (obsC-))))
                 (when (and (obsC-) (q0) (south) (x-agent p1) (y-agent p3)) (and (not (y-agent p3)) (y-agent p4) (not (obsC-))))
                 (when (and (obsC-) (q0) (south) (x-agent p4) (y-agent p3)) (and (not (y-agent p3)) (y-agent p4) (not (obsC-))))
                 (when (and (obsC-) (q0) (east) (x-agent p1) (y-agent p1)) (and (not (x-agent p1)) (x-agent p2) (not (obsC-))))
                 (when (and (obsC-) (q0) (east) (x-agent p1) (y-agent p4)) (and (not (x-agent p1)) (x-agent p2) (not (obsC-))))
                 (when (and (obsC-) (q0) (east) (x-agent p2) (y-agent p1)) (and (not (x-agent p2)) (x-agent p3) (not (obsC-))))
                 (when (and (obsC-) (q0) (east) (x-agent p2) (y-agent p4)) (and (not (x-agent p2)) (x-agent p3) (not (obsC-))))
                 (when (and (obsC-) (q0) (east) (x-agent p3) (y-agent p1)) (and (not (x-agent p3)) (x-agent p4) (not (obsC-))))
                 (when (and (obsC-) (q0) (east) (x-agent p3) (y-agent p4)) (and (not (x-agent p3)) (x-agent p4) (not (obsC-))))
                 (when (and (obsC-) (q0) (west) (x-agent p2) (y-agent p1)) (and (not (x-agent p2)) (x-agent p1) (not (obsC-))))
                 (when (and (obsC-) (q0) (west) (x-agent p2) (y-agent p4)) (and (not (x-agent p2)) (x-agent p1) (not (obsC-))))
                 (when (and (obsC-) (q0) (west) (x-agent p3) (y-agent p1)) (and (not (x-agent p3)) (x-agent p2) (not (obsC-))))
                 (when (and (obsC-) (q0) (west) (x-agent p3) (y-agent p4)) (and (not (x-agent p3)) (x-agent p2) (not (obsC-))))
                 (when (and (obsC-) (q0) (west) (x-agent p4) (y-agent p1)) (and (not (x-agent p4)) (x-agent p3) (not (obsC-))))
                 (when (and (obsC-) (q0) (west) (x-agent p4) (y-agent p4)) (and (not (x-agent p4)) (x-agent p3) (not (obsC-))))
                 
 ))
  (:action map-D--q0-Forwd-q0 :precondition (not-obsD--q0) :effect (and (not (not-obsD--q0)) (obsD--q0-Forwd-q0)) )
  (:action app-D--q0-Forwd-q0
    :precondition (obsD--q0-Forwd-q0)
    :effect (and (when (and (obsD-) (q0) (north) (x-agent p1) (y-agent p2)) (and (not (y-agent p2)) (y-agent p1) (not (obsD-))))
                 (when (and (obsD-) (q0) (north) (x-agent p4) (y-agent p2)) (and (not (y-agent p2)) (y-agent p1) (not (obsD-))))
                 (when (and (obsD-) (q0) (north) (x-agent p1) (y-agent p3)) (and (not (y-agent p3)) (y-agent p2) (not (obsD-))))
                 (when (and (obsD-) (q0) (north) (x-agent p4) (y-agent p3)) (and (not (y-agent p3)) (y-agent p2) (not (obsD-))))
                 (when (and (obsD-) (q0) (north) (x-agent p1) (y-agent p4)) (and (not (y-agent p4)) (y-agent p3) (not (obsD-))))
                 (when (and (obsD-) (q0) (north) (x-agent p4) (y-agent p4)) (and (not (y-agent p4)) (y-agent p3) (not (obsD-))))
                 (when (and (obsD-) (q0) (south) (x-agent p1) (y-agent p1)) (and (not (y-agent p1)) (y-agent p2) (not (obsD-))))
                 (when (and (obsD-) (q0) (south) (x-agent p4) (y-agent p1)) (and (not (y-agent p1)) (y-agent p2) (not (obsD-))))
                 (when (and (obsD-) (q0) (south) (x-agent p1) (y-agent p2)) (and (not (y-agent p2)) (y-agent p3) (not (obsD-))))
                 (when (and (obsD-) (q0) (south) (x-agent p4) (y-agent p2)) (and (not (y-agent p2)) (y-agent p3) (not (obsD-))))
                 (when (and (obsD-) (q0) (south) (x-agent p1) (y-agent p3)) (and (not (y-agent p3)) (y-agent p4) (not (obsD-))))
                 (when (and (obsD-) (q0) (south) (x-agent p4) (y-agent p3)) (and (not (y-agent p3)) (y-agent p4) (not (obsD-))))
                 (when (and (obsD-) (q0) (east) (x-agent p1) (y-agent p1)) (and (not (x-agent p1)) (x-agent p2) (not (obsD-))))
                 (when (and (obsD-) (q0) (east) (x-agent p1) (y-agent p4)) (and (not (x-agent p1)) (x-agent p2) (not (obsD-))))
                 (when (and (obsD-) (q0) (east) (x-agent p2) (y-agent p1)) (and (not (x-agent p2)) (x-agent p3) (not (obsD-))))
                 (when (and (obsD-) (q0) (east) (x-agent p2) (y-agent p4)) (and (not (x-agent p2)) (x-agent p3) (not (obsD-))))
                 (when (and (obsD-) (q0) (east) (x-agent p3) (y-agent p1)) (and (not (x-agent p3)) (x-agent p4) (not (obsD-))))
                 (when (and (obsD-) (q0) (east) (x-agent p3) (y-agent p4)) (and (not (x-agent p3)) (x-agent p4) (not (obsD-))))
                 (when (and (obsD-) (q0) (west) (x-agent p2) (y-agent p1)) (and (not (x-agent p2)) (x-agent p1) (not (obsD-))))
                 (when (and (obsD-) (q0) (west) (x-agent p2) (y-agent p4)) (and (not (x-agent p2)) (x-agent p1) (not (obsD-))))
                 (when (and (obsD-) (q0) (west) (x-agent p3) (y-agent p1)) (and (not (x-agent p3)) (x-agent p2) (not (obsD-))))
                 (when (and (obsD-) (q0) (west) (x-agent p3) (y-agent p4)) (and (not (x-agent p3)) (x-agent p2) (not (obsD-))))
                 (when (and (obsD-) (q0) (west) (x-agent p4) (y-agent p1)) (and (not (x-agent p4)) (x-agent p3) (not (obsD-))))
                 (when (and (obsD-) (q0) (west) (x-agent p4) (y-agent p4)) (and (not (x-agent p4)) (x-agent p3) (not (obsD-))))
                 
 ))
  (:action map----q0-TurnR-q0 :precondition (not-obs---q0) :effect (and (not (not-obs---q0)) (obs---q0-TurnR-q0)) )
  (:action app----q0-TurnR-q0
    :precondition (obs---q0-TurnR-q0)
    :effect (and (when (and (obs--) (q0) (north)) (and (not (north)) (east) (not (obs--))))
                 (when (and (obs--) (q0) (east)) (and (not (east)) (south) (not (obs--))))
                 (when (and (obs--) (q0) (south)) (and (not (south)) (west) (not (obs--))))
                 (when (and (obs--) (q0) (west)) (and (not (west)) (north) (not (obs--))))
 ))
  (:action map-A--q0-TurnR-q0 :precondition (not-obsA--q0) :effect (and (not (not-obsA--q0)) (obsA--q0-TurnR-q0)) )
  (:action app-A--q0-TurnR-q0
    :precondition (obsA--q0-TurnR-q0)
    :effect (and (when (and (obsA-) (q0) (north)) (and (not (north)) (east) (not (obsA-))))
                 (when (and (obsA-) (q0) (east)) (and (not (east)) (south) (not (obsA-))))
                 (when (and (obsA-) (q0) (south)) (and (not (south)) (west) (not (obsA-))))
                 (when (and (obsA-) (q0) (west)) (and (not (west)) (north) (not (obsA-))))
 ))
  (:action map-B--q0-TurnR-q0 :precondition (not-obsB--q0) :effect (and (not (not-obsB--q0)) (obsB--q0-TurnR-q0)) )
  (:action app-B--q0-TurnR-q0
    :precondition (obsB--q0-TurnR-q0)
    :effect (and (when (and (obsB-) (q0) (north)) (and (not (north)) (east) (not (obsB-))))
                 (when (and (obsB-) (q0) (east)) (and (not (east)) (south) (not (obsB-))))
                 (when (and (obsB-) (q0) (south)) (and (not (south)) (west) (not (obsB-))))
                 (when (and (obsB-) (q0) (west)) (and (not (west)) (north) (not (obsB-))))
 ))
  (:action map-C--q0-TurnR-q0 :precondition (not-obsC--q0) :effect (and (not (not-obsC--q0)) (obsC--q0-TurnR-q0)) )
  (:action app-C--q0-TurnR-q0
    :precondition (obsC--q0-TurnR-q0)
    :effect (and (when (and (obsC-) (q0) (north)) (and (not (north)) (east) (not (obsC-))))
                 (when (and (obsC-) (q0) (east)) (and (not (east)) (south) (not (obsC-))))
                 (when (and (obsC-) (q0) (south)) (and (not (south)) (west) (not (obsC-))))
                 (when (and (obsC-) (q0) (west)) (and (not (west)) (north) (not (obsC-))))
 ))
  (:action map-D--q0-TurnR-q0 :precondition (not-obsD--q0) :effect (and (not (not-obsD--q0)) (obsD--q0-TurnR-q0)) )
  (:action app-D--q0-TurnR-q0
    :precondition (obsD--q0-TurnR-q0)
    :effect (and (when (and (obsD-) (q0) (north)) (and (not (north)) (east) (not (obsD-))))
                 (when (and (obsD-) (q0) (east)) (and (not (east)) (south) (not (obsD-))))
                 (when (and (obsD-) (q0) (south)) (and (not (south)) (west) (not (obsD-))))
                 (when (and (obsD-) (q0) (west)) (and (not (west)) (north) (not (obsD-))))
 ))
  (:action map--W-q0-TurnR-q0 :precondition (not-obs-W-q0) :effect (and (not (not-obs-W-q0)) (obs-W-q0-TurnR-q0)) )
  (:action app--W-q0-TurnR-q0
    :precondition (obs-W-q0-TurnR-q0)
    :effect (and (when (and (obs-W) (q0) (north)) (and (not (north)) (east) (not (obs-W))))
                 (when (and (obs-W) (q0) (east)) (and (not (east)) (south) (not (obs-W))))
                 (when (and (obs-W) (q0) (south)) (and (not (south)) (west) (not (obs-W))))
                 (when (and (obs-W) (q0) (west)) (and (not (west)) (north) (not (obs-W))))
 ))
  (:action map-AW-q0-TurnR-q0 :precondition (not-obsAW-q0) :effect (and (not (not-obsAW-q0)) (obsAW-q0-TurnR-q0)) )
  (:action app-AW-q0-TurnR-q0
    :precondition (obsAW-q0-TurnR-q0)
    :effect (and (when (and (obsAW) (q0) (north)) (and (not (north)) (east) (not (obsAW))))
                 (when (and (obsAW) (q0) (east)) (and (not (east)) (south) (not (obsAW))))
                 (when (and (obsAW) (q0) (south)) (and (not (south)) (west) (not (obsAW))))
                 (when (and (obsAW) (q0) (west)) (and (not (west)) (north) (not (obsAW))))
 ))
  (:action map-BW-q0-TurnR-q0 :precondition (not-obsBW-q0) :effect (and (not (not-obsBW-q0)) (obsBW-q0-TurnR-q0)) )
  (:action app-BW-q0-TurnR-q0
    :precondition (obsBW-q0-TurnR-q0)
    :effect (and (when (and (obsBW) (q0) (north)) (and (not (north)) (east) (not (obsBW))))
                 (when (and (obsBW) (q0) (east)) (and (not (east)) (south) (not (obsBW))))
                 (when (and (obsBW) (q0) (south)) (and (not (south)) (west) (not (obsBW))))
                 (when (and (obsBW) (q0) (west)) (and (not (west)) (north) (not (obsBW))))
 ))
  (:action map-CW-q0-TurnR-q0 :precondition (not-obsCW-q0) :effect (and (not (not-obsCW-q0)) (obsCW-q0-TurnR-q0)) )
  (:action app-CW-q0-TurnR-q0
    :precondition (obsCW-q0-TurnR-q0)
    :effect (and (when (and (obsCW) (q0) (north)) (and (not (north)) (east) (not (obsCW))))
                 (when (and (obsCW) (q0) (east)) (and (not (east)) (south) (not (obsCW))))
                 (when (and (obsCW) (q0) (south)) (and (not (south)) (west) (not (obsCW))))
                 (when (and (obsCW) (q0) (west)) (and (not (west)) (north) (not (obsCW))))
 ))
  (:action map-DW-q0-TurnR-q0 :precondition (not-obsDW-q0) :effect (and (not (not-obsDW-q0)) (obsDW-q0-TurnR-q0)) )
  (:action app-DW-q0-TurnR-q0
    :precondition (obsDW-q0-TurnR-q0)
    :effect (and (when (and (obsDW) (q0) (north)) (and (not (north)) (east) (not (obsDW))))
                 (when (and (obsDW) (q0) (east)) (and (not (east)) (south) (not (obsDW))))
                 (when (and (obsDW) (q0) (south)) (and (not (south)) (west) (not (obsDW))))
                 (when (and (obsDW) (q0) (west)) (and (not (west)) (north) (not (obsDW))))
 ))
  (:action map----q0-TurnL-q0 :precondition (not-obs---q0) :effect (and (not (not-obs---q0)) (obs---q0-TurnL-q0)) )
  (:action app----q0-TurnL-q0
    :precondition (obs---q0-TurnL-q0)
    :effect (and (when (and (obs--) (q0) (north)) (and (not (north)) (west) (not (obs--))))
                 (when (and (obs--) (q0) (east)) (and (not (east)) (north) (not (obs--))))
                 (when (and (obs--) (q0) (south)) (and (not (south)) (east) (not (obs--))))
                 (when (and (obs--) (q0) (west)) (and (not (west)) (south) (not (obs--))))
 ))
  (:action map-A--q0-TurnL-q0 :precondition (not-obsA--q0) :effect (and (not (not-obsA--q0)) (obsA--q0-TurnL-q0)) )
  (:action app-A--q0-TurnL-q0
    :precondition (obsA--q0-TurnL-q0)
    :effect (and (when (and (obsA-) (q0) (north)) (and (not (north)) (west) (not (obsA-))))
                 (when (and (obsA-) (q0) (east)) (and (not (east)) (north) (not (obsA-))))
                 (when (and (obsA-) (q0) (south)) (and (not (south)) (east) (not (obsA-))))
                 (when (and (obsA-) (q0) (west)) (and (not (west)) (south) (not (obsA-))))
 ))
  (:action map-B--q0-TurnL-q0 :precondition (not-obsB--q0) :effect (and (not (not-obsB--q0)) (obsB--q0-TurnL-q0)) )
  (:action app-B--q0-TurnL-q0
    :precondition (obsB--q0-TurnL-q0)
    :effect (and (when (and (obsB-) (q0) (north)) (and (not (north)) (west) (not (obsB-))))
                 (when (and (obsB-) (q0) (east)) (and (not (east)) (north) (not (obsB-))))
                 (when (and (obsB-) (q0) (south)) (and (not (south)) (east) (not (obsB-))))
                 (when (and (obsB-) (q0) (west)) (and (not (west)) (south) (not (obsB-))))
 ))
  (:action map-C--q0-TurnL-q0 :precondition (not-obsC--q0) :effect (and (not (not-obsC--q0)) (obsC--q0-TurnL-q0)) )
  (:action app-C--q0-TurnL-q0
    :precondition (obsC--q0-TurnL-q0)
    :effect (and (when (and (obsC-) (q0) (north)) (and (not (north)) (west) (not (obsC-))))
                 (when (and (obsC-) (q0) (east)) (and (not (east)) (north) (not (obsC-))))
                 (when (and (obsC-) (q0) (south)) (and (not (south)) (east) (not (obsC-))))
                 (when (and (obsC-) (q0) (west)) (and (not (west)) (south) (not (obsC-))))
 ))
  (:action map-D--q0-TurnL-q0 :precondition (not-obsD--q0) :effect (and (not (not-obsD--q0)) (obsD--q0-TurnL-q0)) )
  (:action app-D--q0-TurnL-q0
    :precondition (obsD--q0-TurnL-q0)
    :effect (and (when (and (obsD-) (q0) (north)) (and (not (north)) (west) (not (obsD-))))
                 (when (and (obsD-) (q0) (east)) (and (not (east)) (north) (not (obsD-))))
                 (when (and (obsD-) (q0) (south)) (and (not (south)) (east) (not (obsD-))))
                 (when (and (obsD-) (q0) (west)) (and (not (west)) (south) (not (obsD-))))
 ))
  (:action map--W-q0-TurnL-q0 :precondition (not-obs-W-q0) :effect (and (not (not-obs-W-q0)) (obs-W-q0-TurnL-q0)) )
  (:action app--W-q0-TurnL-q0
    :precondition (obs-W-q0-TurnL-q0)
    :effect (and (when (and (obs-W) (q0) (north)) (and (not (north)) (west) (not (obs-W))))
                 (when (and (obs-W) (q0) (east)) (and (not (east)) (north) (not (obs-W))))
                 (when (and (obs-W) (q0) (south)) (and (not (south)) (east) (not (obs-W))))
                 (when (and (obs-W) (q0) (west)) (and (not (west)) (south) (not (obs-W))))
 ))
  (:action map-AW-q0-TurnL-q0 :precondition (not-obsAW-q0) :effect (and (not (not-obsAW-q0)) (obsAW-q0-TurnL-q0)) )
  (:action app-AW-q0-TurnL-q0
    :precondition (obsAW-q0-TurnL-q0)
    :effect (and (when (and (obsAW) (q0) (north)) (and (not (north)) (west) (not (obsAW))))
                 (when (and (obsAW) (q0) (east)) (and (not (east)) (north) (not (obsAW))))
                 (when (and (obsAW) (q0) (south)) (and (not (south)) (east) (not (obsAW))))
                 (when (and (obsAW) (q0) (west)) (and (not (west)) (south) (not (obsAW))))
 ))
  (:action map-BW-q0-TurnL-q0 :precondition (not-obsBW-q0) :effect (and (not (not-obsBW-q0)) (obsBW-q0-TurnL-q0)) )
  (:action app-BW-q0-TurnL-q0
    :precondition (obsBW-q0-TurnL-q0)
    :effect (and (when (and (obsBW) (q0) (north)) (and (not (north)) (west) (not (obsBW))))
                 (when (and (obsBW) (q0) (east)) (and (not (east)) (north) (not (obsBW))))
                 (when (and (obsBW) (q0) (south)) (and (not (south)) (east) (not (obsBW))))
                 (when (and (obsBW) (q0) (west)) (and (not (west)) (south) (not (obsBW))))
 ))
  (:action map-CW-q0-TurnL-q0 :precondition (not-obsCW-q0) :effect (and (not (not-obsCW-q0)) (obsCW-q0-TurnL-q0)) )
  (:action app-CW-q0-TurnL-q0
    :precondition (obsCW-q0-TurnL-q0)
    :effect (and (when (and (obsCW) (q0) (north)) (and (not (north)) (west) (not (obsCW))))
                 (when (and (obsCW) (q0) (east)) (and (not (east)) (north) (not (obsCW))))
                 (when (and (obsCW) (q0) (south)) (and (not (south)) (east) (not (obsCW))))
                 (when (and (obsCW) (q0) (west)) (and (not (west)) (south) (not (obsCW))))
 ))
  (:action map-DW-q0-TurnL-q0 :precondition (not-obsDW-q0) :effect (and (not (not-obsDW-q0)) (obsDW-q0-TurnL-q0)) )
  (:action app-DW-q0-TurnL-q0
    :precondition (obsDW-q0-TurnL-q0)
    :effect (and (when (and (obsDW) (q0) (north)) (and (not (north)) (west) (not (obsDW))))
                 (when (and (obsDW) (q0) (east)) (and (not (east)) (north) (not (obsDW))))
                 (when (and (obsDW) (q0) (south)) (and (not (south)) (east) (not (obsDW))))
                 (when (and (obsDW) (q0) (west)) (and (not (west)) (south) (not (obsDW))))
 ))
  (:action zoom
    :effect (and (when (and (x-agent p1) (y-agent p1) (north)) (obsAW))
                 (when (and (x-agent p1) (y-agent p1) (east)) (obsA-))
                 (when (and (x-agent p1) (y-agent p1) (south)) (obsA-))
                 (when (and (x-agent p1) (y-agent p1) (west)) (obsAW))
                 (when (and (x-agent p1) (y-agent p2) (north)) (obs--))
                 (when (and (x-agent p1) (y-agent p2) (east)) (obs-W))
                 (when (and (x-agent p1) (y-agent p2) (south)) (obs--))
                 (when (and (x-agent p1) (y-agent p2) (west)) (obs-W))
                 (when (and (x-agent p1) (y-agent p3) (north)) (obs--))
                 (when (and (x-agent p1) (y-agent p3) (east)) (obs-W))
                 (when (and (x-agent p1) (y-agent p3) (south)) (obs--))
                 (when (and (x-agent p1) (y-agent p3) (west)) (obs-W))
                 (when (and (x-agent p1) (y-agent p4) (north)) (obsD-))
                 (when (and (x-agent p1) (y-agent p4) (east)) (obsD-))
                 (when (and (x-agent p1) (y-agent p4) (south)) (obsDW))
                 (when (and (x-agent p1) (y-agent p4) (west)) (obsDW))
                 (when (and (x-agent p2) (y-agent p1) (north)) (obs-W))
                 (when (and (x-agent p2) (y-agent p1) (east)) (obs--))
                 (when (and (x-agent p2) (y-agent p1) (south)) (obs-W))
                 (when (and (x-agent p2) (y-agent p1) (west)) (obs--))
                 (when (and (x-agent p2) (y-agent p4) (north)) (obs-W))
                 (when (and (x-agent p2) (y-agent p4) (east)) (obs--))
                 (when (and (x-agent p2) (y-agent p4) (south)) (obs-W))
                 (when (and (x-agent p2) (y-agent p4) (west)) (obs--))
                 (when (and (x-agent p3) (y-agent p1) (north)) (obs-W))
                 (when (and (x-agent p3) (y-agent p1) (east)) (obs--))
                 (when (and (x-agent p3) (y-agent p1) (south)) (obs-W))
                 (when (and (x-agent p3) (y-agent p1) (west)) (obs--))
                 (when (and (x-agent p3) (y-agent p4) (north)) (obs-W))
                 (when (and (x-agent p3) (y-agent p4) (east)) (obs--))
                 (when (and (x-agent p3) (y-agent p4) (south)) (obs-W))
                 (when (and (x-agent p3) (y-agent p4) (west)) (obs--))
                 (when (and (x-agent p4) (y-agent p1) (north)) (obsBW))
                 (when (and (x-agent p4) (y-agent p1) (east)) (obsBW))
                 (when (and (x-agent p4) (y-agent p1) (south)) (obsB-))
                 (when (and (x-agent p4) (y-agent p1) (west)) (obsB-))
                 (when (and (x-agent p4) (y-agent p2) (north)) (obs--))
                 (when (and (x-agent p4) (y-agent p2) (east)) (obs-W))
                 (when (and (x-agent p4) (y-agent p2) (south)) (obs--))
                 (when (and (x-agent p4) (y-agent p2) (west)) (obs-W))
                 (when (and (x-agent p4) (y-agent p3) (north)) (obs--))
                 (when (and (x-agent p4) (y-agent p3) (east)) (obs-W))
                 (when (and (x-agent p4) (y-agent p3) (south)) (obs--))
                 (when (and (x-agent p4) (y-agent p3) (west)) (obs-W))
                 (when (and (x-agent p4) (y-agent p4) (north)) (obsC-))
                 (when (and (x-agent p4) (y-agent p4) (east)) (obsCW))
                 (when (and (x-agent p4) (y-agent p4) (south)) (obsCW))
                 (when (and (x-agent p4) (y-agent p4) (west)) (obsC-))
                 (when (and (x-agent p1) (y-agent p1)) (visited-A))
                 (when (and (x-agent p4) (y-agent p1)) (visited-B))
                 (when (and (x-agent p4) (y-agent p4)) (visited-C))
                 (when (and (x-agent p1) (y-agent p4)) (visited-D)) ))
)
