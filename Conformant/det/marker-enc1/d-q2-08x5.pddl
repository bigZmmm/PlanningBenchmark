(define (domain marker)
  (:constants p1 p2 p3 p4 p5)
  (:predicates (x-pos ?p) (y-pos ?p) (block ?p ?q) (green ?p ?q) (acquired)
               (obs-C) (not-obs-C-q0) (obs-C-q0-Up-q0) (obs-C-q0-Up-q1) (obs-C-q0-Right-q0) (obs-C-q0-Right-q1) (obs-C-q0-Down-q0) (obs-C-q0-Down-q1) (obs-C-q0-Left-q0) (obs-C-q0-Left-q1) (obs-C-q0-Lock-q0) (obs-C-q0-Lock-q1) (not-obs-C-q1) (obs-C-q1-Up-q0) (obs-C-q1-Up-q1) (obs-C-q1-Right-q0) (obs-C-q1-Right-q1) (obs-C-q1-Down-q0) (obs-C-q1-Down-q1) (obs-C-q1-Left-q0) (obs-C-q1-Left-q1) (obs-C-q1-Lock-q0) (obs-C-q1-Lock-q1)
               (obs-B) (not-obs-B-q0) (obs-B-q0-Up-q0) (obs-B-q0-Up-q1) (obs-B-q0-Right-q0) (obs-B-q0-Right-q1) (obs-B-q0-Down-q0) (obs-B-q0-Down-q1) (obs-B-q0-Left-q0) (obs-B-q0-Left-q1) (obs-B-q0-Lock-q0) (obs-B-q0-Lock-q1) (not-obs-B-q1) (obs-B-q1-Up-q0) (obs-B-q1-Up-q1) (obs-B-q1-Right-q0) (obs-B-q1-Right-q1) (obs-B-q1-Down-q0) (obs-B-q1-Down-q1) (obs-B-q1-Left-q0) (obs-B-q1-Left-q1) (obs-B-q1-Lock-q0) (obs-B-q1-Lock-q1)
               (obs-G) (not-obs-G-q0) (obs-G-q0-Up-q0) (obs-G-q0-Up-q1) (obs-G-q0-Right-q0) (obs-G-q0-Right-q1) (obs-G-q0-Down-q0) (obs-G-q0-Down-q1) (obs-G-q0-Left-q0) (obs-G-q0-Left-q1) (obs-G-q0-Lock-q0) (obs-G-q0-Lock-q1) (not-obs-G-q1) (obs-G-q1-Up-q0) (obs-G-q1-Up-q1) (obs-G-q1-Right-q0) (obs-G-q1-Right-q1) (obs-G-q1-Down-q0) (obs-G-q1-Down-q1) (obs-G-q1-Left-q0) (obs-G-q1-Left-q1) (obs-G-q1-Lock-q0) (obs-G-q1-Lock-q1)
               (obsTC) (not-obsTC-q0) (obsTC-q0-Up-q0) (obsTC-q0-Up-q1) (obsTC-q0-Right-q0) (obsTC-q0-Right-q1) (obsTC-q0-Down-q0) (obsTC-q0-Down-q1) (obsTC-q0-Left-q0) (obsTC-q0-Left-q1) (obsTC-q0-Lock-q0) (obsTC-q0-Lock-q1) (not-obsTC-q1) (obsTC-q1-Up-q0) (obsTC-q1-Up-q1) (obsTC-q1-Right-q0) (obsTC-q1-Right-q1) (obsTC-q1-Down-q0) (obsTC-q1-Down-q1) (obsTC-q1-Left-q0) (obsTC-q1-Left-q1) (obsTC-q1-Lock-q0) (obsTC-q1-Lock-q1)
               (obsTB) (not-obsTB-q0) (obsTB-q0-Up-q0) (obsTB-q0-Up-q1) (obsTB-q0-Right-q0) (obsTB-q0-Right-q1) (obsTB-q0-Down-q0) (obsTB-q0-Down-q1) (obsTB-q0-Left-q0) (obsTB-q0-Left-q1) (obsTB-q0-Lock-q0) (obsTB-q0-Lock-q1) (not-obsTB-q1) (obsTB-q1-Up-q0) (obsTB-q1-Up-q1) (obsTB-q1-Right-q0) (obsTB-q1-Right-q1) (obsTB-q1-Down-q0) (obsTB-q1-Down-q1) (obsTB-q1-Left-q0) (obsTB-q1-Left-q1) (obsTB-q1-Lock-q0) (obsTB-q1-Lock-q1)
               (obsTG) (not-obsTG-q0) (obsTG-q0-Up-q0) (obsTG-q0-Up-q1) (obsTG-q0-Right-q0) (obsTG-q0-Right-q1) (obsTG-q0-Down-q0) (obsTG-q0-Down-q1) (obsTG-q0-Left-q0) (obsTG-q0-Left-q1) (obsTG-q0-Lock-q0) (obsTG-q0-Lock-q1) (not-obsTG-q1) (obsTG-q1-Up-q0) (obsTG-q1-Up-q1) (obsTG-q1-Right-q0) (obsTG-q1-Right-q1) (obsTG-q1-Down-q0) (obsTG-q1-Down-q1) (obsTG-q1-Left-q0) (obsTG-q1-Left-q1) (obsTG-q1-Lock-q0) (obsTG-q1-Lock-q1)
               (q0)
               (q1)
  )

  (:action map--B-q0-Up-q0 :precondition (not-obs-B-q0) :effect (and (not (not-obs-B-q0)) (obs-B-q0-Up-q0)) )
  (:action app--B-q0-Up-q0
    :precondition (obs-B-q0-Up-q0)
    :effect (and (when (and (obs-B) (q0) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obs-B))))
                 (when (and (obs-B) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obs-B))))
                 (when (and (obs-B) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obs-B))))
                 (when (and (obs-B) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obs-B)))) ))
  (:action map--B-q0-Up-q1 :precondition (not-obs-B-q0) :effect (and (not (not-obs-B-q0)) (obs-B-q0-Up-q1)) )
  (:action app--B-q0-Up-q1
    :precondition (obs-B-q0-Up-q1)
    :effect (and (when (and (obs-B) (q0) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obs-B)) (not (q0)) (q1)))
                 (when (and (obs-B) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obs-B)) (not (q0)) (q1)))
                 (when (and (obs-B) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obs-B)) (not (q0)) (q1)))
                 (when (and (obs-B) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obs-B)) (not (q0)) (q1))) ))
  (:action map--B-q1-Up-q0 :precondition (not-obs-B-q1) :effect (and (not (not-obs-B-q1)) (obs-B-q1-Up-q0)) )
  (:action app--B-q1-Up-q0
    :precondition (obs-B-q1-Up-q0)
    :effect (and (when (and (obs-B) (q1) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obs-B)) (not (q1)) (q0)))
                 (when (and (obs-B) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obs-B)) (not (q1)) (q0)))
                 (when (and (obs-B) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obs-B)) (not (q1)) (q0)))
                 (when (and (obs-B) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obs-B)) (not (q1)) (q0))) ))
  (:action map--B-q1-Up-q1 :precondition (not-obs-B-q1) :effect (and (not (not-obs-B-q1)) (obs-B-q1-Up-q1)) )
  (:action app--B-q1-Up-q1
    :precondition (obs-B-q1-Up-q1)
    :effect (and (when (and (obs-B) (q1) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obs-B))))
                 (when (and (obs-B) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obs-B))))
                 (when (and (obs-B) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obs-B))))
                 (when (and (obs-B) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obs-B)))) ))
  (:action map-TC-q0-Up-q0 :precondition (not-obsTC-q0) :effect (and (not (not-obsTC-q0)) (obsTC-q0-Up-q0)) )
  (:action app-TC-q0-Up-q0
    :precondition (obsTC-q0-Up-q0)
    :effect (and (when (and (obsTC) (q0) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obsTC))))
                 (when (and (obsTC) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obsTC))))
                 (when (and (obsTC) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obsTC))))
                 (when (and (obsTC) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obsTC)))) ))
  (:action map-TC-q0-Up-q1 :precondition (not-obsTC-q0) :effect (and (not (not-obsTC-q0)) (obsTC-q0-Up-q1)) )
  (:action app-TC-q0-Up-q1
    :precondition (obsTC-q0-Up-q1)
    :effect (and (when (and (obsTC) (q0) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obsTC)) (not (q0)) (q1)))
                 (when (and (obsTC) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obsTC)) (not (q0)) (q1)))
                 (when (and (obsTC) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obsTC)) (not (q0)) (q1)))
                 (when (and (obsTC) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obsTC)) (not (q0)) (q1))) ))
  (:action map-TC-q1-Up-q0 :precondition (not-obsTC-q1) :effect (and (not (not-obsTC-q1)) (obsTC-q1-Up-q0)) )
  (:action app-TC-q1-Up-q0
    :precondition (obsTC-q1-Up-q0)
    :effect (and (when (and (obsTC) (q1) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obsTC)) (not (q1)) (q0)))
                 (when (and (obsTC) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obsTC)) (not (q1)) (q0)))
                 (when (and (obsTC) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obsTC)) (not (q1)) (q0)))
                 (when (and (obsTC) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obsTC)) (not (q1)) (q0))) ))
  (:action map-TC-q1-Up-q1 :precondition (not-obsTC-q1) :effect (and (not (not-obsTC-q1)) (obsTC-q1-Up-q1)) )
  (:action app-TC-q1-Up-q1
    :precondition (obsTC-q1-Up-q1)
    :effect (and (when (and (obsTC) (q1) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obsTC))))
                 (when (and (obsTC) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obsTC))))
                 (when (and (obsTC) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obsTC))))
                 (when (and (obsTC) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obsTC)))) ))
  (:action map-TB-q0-Up-q0 :precondition (not-obsTB-q0) :effect (and (not (not-obsTB-q0)) (obsTB-q0-Up-q0)) )
  (:action app-TB-q0-Up-q0
    :precondition (obsTB-q0-Up-q0)
    :effect (and (when (and (obsTB) (q0) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obsTB))))
                 (when (and (obsTB) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obsTB))))
                 (when (and (obsTB) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obsTB))))
                 (when (and (obsTB) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obsTB)))) ))
  (:action map-TB-q0-Up-q1 :precondition (not-obsTB-q0) :effect (and (not (not-obsTB-q0)) (obsTB-q0-Up-q1)) )
  (:action app-TB-q0-Up-q1
    :precondition (obsTB-q0-Up-q1)
    :effect (and (when (and (obsTB) (q0) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obsTB)) (not (q0)) (q1)))
                 (when (and (obsTB) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obsTB)) (not (q0)) (q1)))
                 (when (and (obsTB) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obsTB)) (not (q0)) (q1)))
                 (when (and (obsTB) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obsTB)) (not (q0)) (q1))) ))
  (:action map-TB-q1-Up-q0 :precondition (not-obsTB-q1) :effect (and (not (not-obsTB-q1)) (obsTB-q1-Up-q0)) )
  (:action app-TB-q1-Up-q0
    :precondition (obsTB-q1-Up-q0)
    :effect (and (when (and (obsTB) (q1) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obsTB)) (not (q1)) (q0)))
                 (when (and (obsTB) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obsTB)) (not (q1)) (q0)))
                 (when (and (obsTB) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obsTB)) (not (q1)) (q0)))
                 (when (and (obsTB) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obsTB)) (not (q1)) (q0))) ))
  (:action map-TB-q1-Up-q1 :precondition (not-obsTB-q1) :effect (and (not (not-obsTB-q1)) (obsTB-q1-Up-q1)) )
  (:action app-TB-q1-Up-q1
    :precondition (obsTB-q1-Up-q1)
    :effect (and (when (and (obsTB) (q1) (y-pos p1)) (and (not (y-pos p1)) (y-pos p2) (not (obsTB))))
                 (when (and (obsTB) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p3) (not (obsTB))))
                 (when (and (obsTB) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p4) (not (obsTB))))
                 (when (and (obsTB) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p5) (not (obsTB)))) ))
  (:action map-TC-q0-Right-q0 :precondition (not-obsTC-q0) :effect (and (not (not-obsTC-q0)) (obsTC-q0-Right-q0)) )
  (:action app-TC-q0-Right-q0
    :precondition (obsTC-q0-Right-q0)
    :effect (and (when (and (obsTC) (q0) (x-pos p1)) (and (not (x-pos p1)) (x-pos p2) (not (obsTC))))
                 (when (and (obsTC) (q0) (x-pos p2)) (and (not (x-pos p2)) (x-pos p3) (not (obsTC))))
                 (when (and (obsTC) (q0) (x-pos p3)) (and (not (x-pos p3)) (x-pos p4) (not (obsTC)))) ))
  (:action map-TC-q0-Right-q1 :precondition (not-obsTC-q0) :effect (and (not (not-obsTC-q0)) (obsTC-q0-Right-q1)) )
  (:action app-TC-q0-Right-q1
    :precondition (obsTC-q0-Right-q1)
    :effect (and (when (and (obsTC) (q0) (x-pos p1)) (and (not (x-pos p1)) (x-pos p2) (not (obsTC)) (not (q0)) (q1)))
                 (when (and (obsTC) (q0) (x-pos p2)) (and (not (x-pos p2)) (x-pos p3) (not (obsTC)) (not (q0)) (q1)))
                 (when (and (obsTC) (q0) (x-pos p3)) (and (not (x-pos p3)) (x-pos p4) (not (obsTC)) (not (q0)) (q1))) ))
  (:action map-TC-q1-Right-q0 :precondition (not-obsTC-q1) :effect (and (not (not-obsTC-q1)) (obsTC-q1-Right-q0)) )
  (:action app-TC-q1-Right-q0
    :precondition (obsTC-q1-Right-q0)
    :effect (and (when (and (obsTC) (q1) (x-pos p1)) (and (not (x-pos p1)) (x-pos p2) (not (obsTC)) (not (q1)) (q0)))
                 (when (and (obsTC) (q1) (x-pos p2)) (and (not (x-pos p2)) (x-pos p3) (not (obsTC)) (not (q1)) (q0)))
                 (when (and (obsTC) (q1) (x-pos p3)) (and (not (x-pos p3)) (x-pos p4) (not (obsTC)) (not (q1)) (q0))) ))
  (:action map-TC-q1-Right-q1 :precondition (not-obsTC-q1) :effect (and (not (not-obsTC-q1)) (obsTC-q1-Right-q1)) )
  (:action app-TC-q1-Right-q1
    :precondition (obsTC-q1-Right-q1)
    :effect (and (when (and (obsTC) (q1) (x-pos p1)) (and (not (x-pos p1)) (x-pos p2) (not (obsTC))))
                 (when (and (obsTC) (q1) (x-pos p2)) (and (not (x-pos p2)) (x-pos p3) (not (obsTC))))
                 (when (and (obsTC) (q1) (x-pos p3)) (and (not (x-pos p3)) (x-pos p4) (not (obsTC)))) ))
  (:action map-TB-q0-Right-q0 :precondition (not-obsTB-q0) :effect (and (not (not-obsTB-q0)) (obsTB-q0-Right-q0)) )
  (:action app-TB-q0-Right-q0
    :precondition (obsTB-q0-Right-q0)
    :effect (and (when (and (obsTB) (q0) (x-pos p1)) (and (not (x-pos p1)) (x-pos p2) (not (obsTB))))
                 (when (and (obsTB) (q0) (x-pos p2)) (and (not (x-pos p2)) (x-pos p3) (not (obsTB))))
                 (when (and (obsTB) (q0) (x-pos p3)) (and (not (x-pos p3)) (x-pos p4) (not (obsTB)))) ))
  (:action map-TB-q0-Right-q1 :precondition (not-obsTB-q0) :effect (and (not (not-obsTB-q0)) (obsTB-q0-Right-q1)) )
  (:action app-TB-q0-Right-q1
    :precondition (obsTB-q0-Right-q1)
    :effect (and (when (and (obsTB) (q0) (x-pos p1)) (and (not (x-pos p1)) (x-pos p2) (not (obsTB)) (not (q0)) (q1)))
                 (when (and (obsTB) (q0) (x-pos p2)) (and (not (x-pos p2)) (x-pos p3) (not (obsTB)) (not (q0)) (q1)))
                 (when (and (obsTB) (q0) (x-pos p3)) (and (not (x-pos p3)) (x-pos p4) (not (obsTB)) (not (q0)) (q1))) ))
  (:action map-TB-q1-Right-q0 :precondition (not-obsTB-q1) :effect (and (not (not-obsTB-q1)) (obsTB-q1-Right-q0)) )
  (:action app-TB-q1-Right-q0
    :precondition (obsTB-q1-Right-q0)
    :effect (and (when (and (obsTB) (q1) (x-pos p1)) (and (not (x-pos p1)) (x-pos p2) (not (obsTB)) (not (q1)) (q0)))
                 (when (and (obsTB) (q1) (x-pos p2)) (and (not (x-pos p2)) (x-pos p3) (not (obsTB)) (not (q1)) (q0)))
                 (when (and (obsTB) (q1) (x-pos p3)) (and (not (x-pos p3)) (x-pos p4) (not (obsTB)) (not (q1)) (q0))) ))
  (:action map-TB-q1-Right-q1 :precondition (not-obsTB-q1) :effect (and (not (not-obsTB-q1)) (obsTB-q1-Right-q1)) )
  (:action app-TB-q1-Right-q1
    :precondition (obsTB-q1-Right-q1)
    :effect (and (when (and (obsTB) (q1) (x-pos p1)) (and (not (x-pos p1)) (x-pos p2) (not (obsTB))))
                 (when (and (obsTB) (q1) (x-pos p2)) (and (not (x-pos p2)) (x-pos p3) (not (obsTB))))
                 (when (and (obsTB) (q1) (x-pos p3)) (and (not (x-pos p3)) (x-pos p4) (not (obsTB)))) ))
  (:action map--C-q0-Down-q0 :precondition (not-obs-C-q0) :effect (and (not (not-obs-C-q0)) (obs-C-q0-Down-q0)) )
  (:action app--C-q0-Down-q0
    :precondition (obs-C-q0-Down-q0)
    :effect (and (when (and (obs-C) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obs-C))))
                 (when (and (obs-C) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obs-C))))
                 (when (and (obs-C) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obs-C))))
                 (when (and (obs-C) (q0) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obs-C)))) ))
  (:action map--C-q0-Down-q1 :precondition (not-obs-C-q0) :effect (and (not (not-obs-C-q0)) (obs-C-q0-Down-q1)) )
  (:action app--C-q0-Down-q1
    :precondition (obs-C-q0-Down-q1)
    :effect (and (when (and (obs-C) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obs-C)) (not (q0)) (q1)))
                 (when (and (obs-C) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obs-C)) (not (q0)) (q1)))
                 (when (and (obs-C) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obs-C)) (not (q0)) (q1)))
                 (when (and (obs-C) (q0) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obs-C)) (not (q0)) (q1))) ))
  (:action map--C-q1-Down-q0 :precondition (not-obs-C-q1) :effect (and (not (not-obs-C-q1)) (obs-C-q1-Down-q0)) )
  (:action app--C-q1-Down-q0
    :precondition (obs-C-q1-Down-q0)
    :effect (and (when (and (obs-C) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obs-C)) (not (q1)) (q0)))
                 (when (and (obs-C) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obs-C)) (not (q1)) (q0)))
                 (when (and (obs-C) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obs-C)) (not (q1)) (q0)))
                 (when (and (obs-C) (q1) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obs-C)) (not (q1)) (q0))) ))
  (:action map--C-q1-Down-q1 :precondition (not-obs-C-q1) :effect (and (not (not-obs-C-q1)) (obs-C-q1-Down-q1)) )
  (:action app--C-q1-Down-q1
    :precondition (obs-C-q1-Down-q1)
    :effect (and (when (and (obs-C) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obs-C))))
                 (when (and (obs-C) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obs-C))))
                 (when (and (obs-C) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obs-C))))
                 (when (and (obs-C) (q1) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obs-C)))) ))
  (:action map--B-q0-Down-q0 :precondition (not-obs-B-q0) :effect (and (not (not-obs-B-q0)) (obs-B-q0-Down-q0)) )
  (:action app--B-q0-Down-q0
    :precondition (obs-B-q0-Down-q0)
    :effect (and (when (and (obs-B) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obs-B))))
                 (when (and (obs-B) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obs-B))))
                 (when (and (obs-B) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obs-B))))
                 (when (and (obs-B) (q0) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obs-B)))) ))
  (:action map--B-q0-Down-q1 :precondition (not-obs-B-q0) :effect (and (not (not-obs-B-q0)) (obs-B-q0-Down-q1)) )
  (:action app--B-q0-Down-q1
    :precondition (obs-B-q0-Down-q1)
    :effect (and (when (and (obs-B) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obs-B)) (not (q0)) (q1)))
                 (when (and (obs-B) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obs-B)) (not (q0)) (q1)))
                 (when (and (obs-B) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obs-B)) (not (q0)) (q1)))
                 (when (and (obs-B) (q0) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obs-B)) (not (q0)) (q1))) ))
  (:action map--B-q1-Down-q0 :precondition (not-obs-B-q1) :effect (and (not (not-obs-B-q1)) (obs-B-q1-Down-q0)) )
  (:action app--B-q1-Down-q0
    :precondition (obs-B-q1-Down-q0)
    :effect (and (when (and (obs-B) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obs-B)) (not (q1)) (q0)))
                 (when (and (obs-B) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obs-B)) (not (q1)) (q0)))
                 (when (and (obs-B) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obs-B)) (not (q1)) (q0)))
                 (when (and (obs-B) (q1) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obs-B)) (not (q1)) (q0))) ))
  (:action map--B-q1-Down-q1 :precondition (not-obs-B-q1) :effect (and (not (not-obs-B-q1)) (obs-B-q1-Down-q1)) )
  (:action app--B-q1-Down-q1
    :precondition (obs-B-q1-Down-q1)
    :effect (and (when (and (obs-B) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obs-B))))
                 (when (and (obs-B) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obs-B))))
                 (when (and (obs-B) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obs-B))))
                 (when (and (obs-B) (q1) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obs-B)))) ))
  (:action map-TC-q0-Down-q0 :precondition (not-obsTC-q0) :effect (and (not (not-obsTC-q0)) (obsTC-q0-Down-q0)) )
  (:action app-TC-q0-Down-q0
    :precondition (obsTC-q0-Down-q0)
    :effect (and (when (and (obsTC) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obsTC))))
                 (when (and (obsTC) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obsTC))))
                 (when (and (obsTC) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obsTC))))
                 (when (and (obsTC) (q0) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obsTC)))) ))
  (:action map-TC-q0-Down-q1 :precondition (not-obsTC-q0) :effect (and (not (not-obsTC-q0)) (obsTC-q0-Down-q1)) )
  (:action app-TC-q0-Down-q1
    :precondition (obsTC-q0-Down-q1)
    :effect (and (when (and (obsTC) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obsTC)) (not (q0)) (q1)))
                 (when (and (obsTC) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obsTC)) (not (q0)) (q1)))
                 (when (and (obsTC) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obsTC)) (not (q0)) (q1)))
                 (when (and (obsTC) (q0) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obsTC)) (not (q0)) (q1))) ))
  (:action map-TC-q1-Down-q0 :precondition (not-obsTC-q1) :effect (and (not (not-obsTC-q1)) (obsTC-q1-Down-q0)) )
  (:action app-TC-q1-Down-q0
    :precondition (obsTC-q1-Down-q0)
    :effect (and (when (and (obsTC) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obsTC)) (not (q1)) (q0)))
                 (when (and (obsTC) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obsTC)) (not (q1)) (q0)))
                 (when (and (obsTC) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obsTC)) (not (q1)) (q0)))
                 (when (and (obsTC) (q1) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obsTC)) (not (q1)) (q0))) ))
  (:action map-TC-q1-Down-q1 :precondition (not-obsTC-q1) :effect (and (not (not-obsTC-q1)) (obsTC-q1-Down-q1)) )
  (:action app-TC-q1-Down-q1
    :precondition (obsTC-q1-Down-q1)
    :effect (and (when (and (obsTC) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obsTC))))
                 (when (and (obsTC) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obsTC))))
                 (when (and (obsTC) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obsTC))))
                 (when (and (obsTC) (q1) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obsTC)))) ))
  (:action map-TB-q0-Down-q0 :precondition (not-obsTB-q0) :effect (and (not (not-obsTB-q0)) (obsTB-q0-Down-q0)) )
  (:action app-TB-q0-Down-q0
    :precondition (obsTB-q0-Down-q0)
    :effect (and (when (and (obsTB) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obsTB))))
                 (when (and (obsTB) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obsTB))))
                 (when (and (obsTB) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obsTB))))
                 (when (and (obsTB) (q0) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obsTB)))) ))
  (:action map-TB-q0-Down-q1 :precondition (not-obsTB-q0) :effect (and (not (not-obsTB-q0)) (obsTB-q0-Down-q1)) )
  (:action app-TB-q0-Down-q1
    :precondition (obsTB-q0-Down-q1)
    :effect (and (when (and (obsTB) (q0) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obsTB)) (not (q0)) (q1)))
                 (when (and (obsTB) (q0) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obsTB)) (not (q0)) (q1)))
                 (when (and (obsTB) (q0) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obsTB)) (not (q0)) (q1)))
                 (when (and (obsTB) (q0) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obsTB)) (not (q0)) (q1))) ))
  (:action map-TB-q1-Down-q0 :precondition (not-obsTB-q1) :effect (and (not (not-obsTB-q1)) (obsTB-q1-Down-q0)) )
  (:action app-TB-q1-Down-q0
    :precondition (obsTB-q1-Down-q0)
    :effect (and (when (and (obsTB) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obsTB)) (not (q1)) (q0)))
                 (when (and (obsTB) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obsTB)) (not (q1)) (q0)))
                 (when (and (obsTB) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obsTB)) (not (q1)) (q0)))
                 (when (and (obsTB) (q1) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obsTB)) (not (q1)) (q0))) ))
  (:action map-TB-q1-Down-q1 :precondition (not-obsTB-q1) :effect (and (not (not-obsTB-q1)) (obsTB-q1-Down-q1)) )
  (:action app-TB-q1-Down-q1
    :precondition (obsTB-q1-Down-q1)
    :effect (and (when (and (obsTB) (q1) (y-pos p2)) (and (not (y-pos p2)) (y-pos p1) (not (obsTB))))
                 (when (and (obsTB) (q1) (y-pos p3)) (and (not (y-pos p3)) (y-pos p2) (not (obsTB))))
                 (when (and (obsTB) (q1) (y-pos p4)) (and (not (y-pos p4)) (y-pos p3) (not (obsTB))))
                 (when (and (obsTB) (q1) (y-pos p5)) (and (not (y-pos p5)) (y-pos p4) (not (obsTB)))) ))
  (:action map-TC-q0-Left-q0 :precondition (not-obsTC-q0) :effect (and (not (not-obsTC-q0)) (obsTC-q0-Left-q0)) )
  (:action app-TC-q0-Left-q0
    :precondition (obsTC-q0-Left-q0)
    :effect (and (when (and (obsTC) (q0) (x-pos p2)) (and (not (x-pos p2)) (x-pos p1) (not (obsTC))))
                 (when (and (obsTC) (q0) (x-pos p3)) (and (not (x-pos p3)) (x-pos p2) (not (obsTC))))
                 (when (and (obsTC) (q0) (x-pos p4)) (and (not (x-pos p4)) (x-pos p3) (not (obsTC)))) ))
  (:action map-TC-q0-Left-q1 :precondition (not-obsTC-q0) :effect (and (not (not-obsTC-q0)) (obsTC-q0-Left-q1)) )
  (:action app-TC-q0-Left-q1
    :precondition (obsTC-q0-Left-q1)
    :effect (and (when (and (obsTC) (q0) (x-pos p2)) (and (not (x-pos p2)) (x-pos p1) (not (obsTC)) (not (q0)) (q1)))
                 (when (and (obsTC) (q0) (x-pos p3)) (and (not (x-pos p3)) (x-pos p2) (not (obsTC)) (not (q0)) (q1)))
                 (when (and (obsTC) (q0) (x-pos p4)) (and (not (x-pos p4)) (x-pos p3) (not (obsTC)) (not (q0)) (q1))) ))
  (:action map-TC-q1-Left-q0 :precondition (not-obsTC-q1) :effect (and (not (not-obsTC-q1)) (obsTC-q1-Left-q0)) )
  (:action app-TC-q1-Left-q0
    :precondition (obsTC-q1-Left-q0)
    :effect (and (when (and (obsTC) (q1) (x-pos p2)) (and (not (x-pos p2)) (x-pos p1) (not (obsTC)) (not (q1)) (q0)))
                 (when (and (obsTC) (q1) (x-pos p3)) (and (not (x-pos p3)) (x-pos p2) (not (obsTC)) (not (q1)) (q0)))
                 (when (and (obsTC) (q1) (x-pos p4)) (and (not (x-pos p4)) (x-pos p3) (not (obsTC)) (not (q1)) (q0))) ))
  (:action map-TC-q1-Left-q1 :precondition (not-obsTC-q1) :effect (and (not (not-obsTC-q1)) (obsTC-q1-Left-q1)) )
  (:action app-TC-q1-Left-q1
    :precondition (obsTC-q1-Left-q1)
    :effect (and (when (and (obsTC) (q1) (x-pos p2)) (and (not (x-pos p2)) (x-pos p1) (not (obsTC))))
                 (when (and (obsTC) (q1) (x-pos p3)) (and (not (x-pos p3)) (x-pos p2) (not (obsTC))))
                 (when (and (obsTC) (q1) (x-pos p4)) (and (not (x-pos p4)) (x-pos p3) (not (obsTC)))) ))
  (:action map-TB-q0-Left-q0 :precondition (not-obsTB-q0) :effect (and (not (not-obsTB-q0)) (obsTB-q0-Left-q0)) )
  (:action app-TB-q0-Left-q0
    :precondition (obsTB-q0-Left-q0)
    :effect (and (when (and (obsTB) (q0) (x-pos p2)) (and (not (x-pos p2)) (x-pos p1) (not (obsTB))))
                 (when (and (obsTB) (q0) (x-pos p3)) (and (not (x-pos p3)) (x-pos p2) (not (obsTB))))
                 (when (and (obsTB) (q0) (x-pos p4)) (and (not (x-pos p4)) (x-pos p3) (not (obsTB)))) ))
  (:action map-TB-q0-Left-q1 :precondition (not-obsTB-q0) :effect (and (not (not-obsTB-q0)) (obsTB-q0-Left-q1)) )
  (:action app-TB-q0-Left-q1
    :precondition (obsTB-q0-Left-q1)
    :effect (and (when (and (obsTB) (q0) (x-pos p2)) (and (not (x-pos p2)) (x-pos p1) (not (obsTB)) (not (q0)) (q1)))
                 (when (and (obsTB) (q0) (x-pos p3)) (and (not (x-pos p3)) (x-pos p2) (not (obsTB)) (not (q0)) (q1)))
                 (when (and (obsTB) (q0) (x-pos p4)) (and (not (x-pos p4)) (x-pos p3) (not (obsTB)) (not (q0)) (q1))) ))
  (:action map-TB-q1-Left-q0 :precondition (not-obsTB-q1) :effect (and (not (not-obsTB-q1)) (obsTB-q1-Left-q0)) )
  (:action app-TB-q1-Left-q0
    :precondition (obsTB-q1-Left-q0)
    :effect (and (when (and (obsTB) (q1) (x-pos p2)) (and (not (x-pos p2)) (x-pos p1) (not (obsTB)) (not (q1)) (q0)))
                 (when (and (obsTB) (q1) (x-pos p3)) (and (not (x-pos p3)) (x-pos p2) (not (obsTB)) (not (q1)) (q0)))
                 (when (and (obsTB) (q1) (x-pos p4)) (and (not (x-pos p4)) (x-pos p3) (not (obsTB)) (not (q1)) (q0))) ))
  (:action map-TB-q1-Left-q1 :precondition (not-obsTB-q1) :effect (and (not (not-obsTB-q1)) (obsTB-q1-Left-q1)) )
  (:action app-TB-q1-Left-q1
    :precondition (obsTB-q1-Left-q1)
    :effect (and (when (and (obsTB) (q1) (x-pos p2)) (and (not (x-pos p2)) (x-pos p1) (not (obsTB))))
                 (when (and (obsTB) (q1) (x-pos p3)) (and (not (x-pos p3)) (x-pos p2) (not (obsTB))))
                 (when (and (obsTB) (q1) (x-pos p4)) (and (not (x-pos p4)) (x-pos p3) (not (obsTB)))) ))
  (:action zoom
    :effect (and (when (and (x-pos p1) (y-pos p1) (not (block p1 p1))) (obsTC))
                 (when (and (x-pos p1) (y-pos p1) (block p1 p1) (not (green p1 p1))) (obsTB))
                 (when (and (x-pos p1) (y-pos p1) (green p1 p1)) (obsTG))
                 (when (and (x-pos p1) (y-pos p2) (not (block p1 p2))) (obs-C))
                 (when (and (x-pos p1) (y-pos p2) (block p1 p2) (not (green p1 p2))) (obs-B))
                 (when (and (x-pos p1) (y-pos p2) (green p1 p2)) (obs-G))
                 (when (and (x-pos p1) (y-pos p3) (not (block p1 p3))) (obs-C))
                 (when (and (x-pos p1) (y-pos p3) (block p1 p3) (not (green p1 p3))) (obs-B))
                 (when (and (x-pos p1) (y-pos p3) (green p1 p3)) (obs-G))
                 (when (and (x-pos p1) (y-pos p4) (not (block p1 p4))) (obs-C))
                 (when (and (x-pos p1) (y-pos p4) (block p1 p4) (not (green p1 p4))) (obs-B))
                 (when (and (x-pos p1) (y-pos p4) (green p1 p4)) (obs-G))
                 (when (and (x-pos p1) (y-pos p5) (not (block p1 p5))) (obs-C))
                 (when (and (x-pos p1) (y-pos p5) (block p1 p5) (not (green p1 p5))) (obs-B))
                 (when (and (x-pos p1) (y-pos p5) (green p1 p5)) (obs-G))
                 (when (and (x-pos p2) (y-pos p1) (not (block p2 p1))) (obsTC))
                 (when (and (x-pos p2) (y-pos p1) (block p2 p1) (not (green p2 p1))) (obsTB))
                 (when (and (x-pos p2) (y-pos p1) (green p2 p1)) (obsTG))
                 (when (and (x-pos p2) (y-pos p2) (not (block p2 p2))) (obs-C))
                 (when (and (x-pos p2) (y-pos p2) (block p2 p2) (not (green p2 p2))) (obs-B))
                 (when (and (x-pos p2) (y-pos p2) (green p2 p2)) (obs-G))
                 (when (and (x-pos p2) (y-pos p3) (not (block p2 p3))) (obs-C))
                 (when (and (x-pos p2) (y-pos p3) (block p2 p3) (not (green p2 p3))) (obs-B))
                 (when (and (x-pos p2) (y-pos p3) (green p2 p3)) (obs-G))
                 (when (and (x-pos p2) (y-pos p4) (not (block p2 p4))) (obs-C))
                 (when (and (x-pos p2) (y-pos p4) (block p2 p4) (not (green p2 p4))) (obs-B))
                 (when (and (x-pos p2) (y-pos p4) (green p2 p4)) (obs-G))
                 (when (and (x-pos p2) (y-pos p5) (not (block p2 p5))) (obs-C))
                 (when (and (x-pos p2) (y-pos p5) (block p2 p5) (not (green p2 p5))) (obs-B))
                 (when (and (x-pos p2) (y-pos p5) (green p2 p5)) (obs-G))
                 (when (and (x-pos p3) (y-pos p1) (not (block p3 p1))) (obsTC))
                 (when (and (x-pos p3) (y-pos p1) (block p3 p1) (not (green p3 p1))) (obsTB))
                 (when (and (x-pos p3) (y-pos p1) (green p3 p1)) (obsTG))
                 (when (and (x-pos p3) (y-pos p2) (not (block p3 p2))) (obs-C))
                 (when (and (x-pos p3) (y-pos p2) (block p3 p2) (not (green p3 p2))) (obs-B))
                 (when (and (x-pos p3) (y-pos p2) (green p3 p2)) (obs-G))
                 (when (and (x-pos p3) (y-pos p3) (not (block p3 p3))) (obs-C))
                 (when (and (x-pos p3) (y-pos p3) (block p3 p3) (not (green p3 p3))) (obs-B))
                 (when (and (x-pos p3) (y-pos p3) (green p3 p3)) (obs-G))
                 (when (and (x-pos p3) (y-pos p4) (not (block p3 p4))) (obs-C))
                 (when (and (x-pos p3) (y-pos p4) (block p3 p4) (not (green p3 p4))) (obs-B))
                 (when (and (x-pos p3) (y-pos p4) (green p3 p4)) (obs-G))
                 (when (and (x-pos p3) (y-pos p5) (not (block p3 p5))) (obs-C))
                 (when (and (x-pos p3) (y-pos p5) (block p3 p5) (not (green p3 p5))) (obs-B))
                 (when (and (x-pos p3) (y-pos p5) (green p3 p5)) (obs-G))
                 (when (and (x-pos p4) (y-pos p1) (not (block p4 p1))) (obsTC))
                 (when (and (x-pos p4) (y-pos p1) (block p4 p1) (not (green p4 p1))) (obsTB))
                 (when (and (x-pos p4) (y-pos p1) (green p4 p1)) (obsTG))
                 (when (and (x-pos p4) (y-pos p2) (not (block p4 p2))) (obs-C))
                 (when (and (x-pos p4) (y-pos p2) (block p4 p2) (not (green p4 p2))) (obs-B))
                 (when (and (x-pos p4) (y-pos p2) (green p4 p2)) (obs-G))
                 (when (and (x-pos p4) (y-pos p3) (not (block p4 p3))) (obs-C))
                 (when (and (x-pos p4) (y-pos p3) (block p4 p3) (not (green p4 p3))) (obs-B))
                 (when (and (x-pos p4) (y-pos p3) (green p4 p3)) (obs-G))
                 (when (and (x-pos p4) (y-pos p4) (not (block p4 p4))) (obs-C))
                 (when (and (x-pos p4) (y-pos p4) (block p4 p4) (not (green p4 p4))) (obs-B))
                 (when (and (x-pos p4) (y-pos p4) (green p4 p4)) (obs-G))
                 (when (and (x-pos p4) (y-pos p5) (not (block p4 p5))) (obs-C))
                 (when (and (x-pos p4) (y-pos p5) (block p4 p5) (not (green p4 p5))) (obs-B))
                 (when (and (x-pos p4) (y-pos p5) (green p4 p5)) (obs-G)) ))
)
