(define (problem b4)
  (:domain blocks)
  (:objects A B C D - block)
  (:init
     (oneof (handempty) (holding A) (holding B) (holding C) (holding D)) ; (holding ?x)
         (oneof (holding A) (clear A) (on B A) (on C A) (on D A))            ; (above A ?x)
         (oneof (holding A) (ontable A) (on A B) (on A C) (on A D))          ; (on A ?x)
         (oneof (holding B) (clear B) (on A B) (on C B) (on D B))            ; (above B ?x)
         (oneof (holding B) (ontable B) (on B A) (on B C) (on B D))          ; (on B ?x)
         (oneof (holding C) (clear C) (on A C) (on B C) (on D C))            ; (above C ?x)
         (oneof (holding C) (ontable C) (on C A) (on C B) (on C D))          ; (on C ?x)
         (oneof (holding D) (clear D) (on A D) (on B D) (on C D))            ; (above D ?x)
         (oneof (holding D) (ontable D) (on D A) (on D B) (on D C))          ; (on D ?x)

        

         (or (not (on A B)) (not (on B A)))                                  ; cycles
         (or (not (on A C)) (not (on C A)))
         (or (not (on A D)) (not (on D A)))
         (or (not (on B C)) (not (on C B)))
         (or (not (on B D)) (not (on D B)))
         (or (not (on C D)) (not (on D C)))
         (or (not (on A B)) (not (on B C)) (not (on C A)))                   ; on(A,B) & on(B,C) => -on(C,A)
         (or (not (on A B)) (not (on B D)) (not (on D A)))                   ; on(A,B) & on(B,D) => -on(D,A)
         (or (not (on A C)) (not (on C B)) (not (on B A)))                   ; on(A,C) & on(C,B) => -on(B,A)
         (or (not (on A C)) (not (on C D)) (not (on D A)))                   ; on(A,C) & on(C,D) => -on(D,A)
         (or (not (on A D)) (not (on D B)) (not (on B A)))                   ; on(A,D) & on(D,B) => -on(B,A)
         (or (not (on A D)) (not (on D C)) (not (on C A)))                   ; on(A,D) & on(D,C) => -on(C,A)
         (or (not (on B C)) (not (on C D)) (not (on D B)))                   ; on(B,C) & on(C,D) => -on(D,B)
         (or (not (on B D)) (not (on D C)) (not (on C B)))                   ; on(B,D) & on(D,C) => -on(C,B)
         (or (not (on A B)) (not (on B C)) (not (on C D)) (not (on D A)))    ; on(A,B) & on(B,C) & on(C,D) => -on(D,A)
         (or (not (on A B)) (not (on B D)) (not (on D C)) (not (on C A)))    ; on(A,B) & on(B,D) & on(D,C) => -on(C,A)
         (or (not (on A C)) (not (on C B)) (not (on B D)) (not (on D A)))    ; on(A,C) & on(C,B) & on(B,D) => -on(D,A)
         (or (not (on A C)) (not (on C D)) (not (on D B)) (not (on B A)))    ; on(A,C) & on(C,D) & on(D,B) => -on(B,A)
         (or (not (on A D)) (not (on D B)) (not (on B C)) (not (on C A)))    ; on(A,D) & on(D,B) & on(B,C) => -on(C,A)
         (or (not (on A D)) (not (on D C)) (not (on C B)) (not (on B A)))    ; on(A,D) & on(D,C) & on(C,B) => -on(B,A)
    )
  
  (:goal (and (ontable A) (on B A) (on C B) (on D C)
         ))
)
