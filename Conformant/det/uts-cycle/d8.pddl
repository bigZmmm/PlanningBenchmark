(define (domain uts_cycle_8)
 (:requirements :typing :conditional-effects)
 (:types node label)
 (:constants  n0 n1 n2 n3 n4 n5 n6 n7 - node)
 (:predicates
	(visited ?n - node)
	(edge_label ?n1 ?n2 - node ?l - label)
	(at_node ?n - node)
  )
  (:action follow_label
   :parameters (?label - label)
   :precondition (and)
   :effect 
   (and 
    (when (and (at_node n0) (edge_label n0 n1 ?label))
      (and  (at_node n1) (not (at_node n0)) (visited n1)))
    (when (and (at_node n0) (edge_label n0 n7 ?label))
      (and  (at_node n7) (not (at_node n0)) (visited n7)))
    (when (and (at_node n1) (edge_label n1 n2 ?label))
      (and  (at_node n2) (not (at_node n1)) (visited n2)))
    (when (and (at_node n1) (edge_label n1 n0 ?label))
      (and  (at_node n0) (not (at_node n1)) (visited n0)))
    (when (and (at_node n2) (edge_label n2 n3 ?label))
      (and  (at_node n3) (not (at_node n2)) (visited n3)))
    (when (and (at_node n2) (edge_label n2 n1 ?label))
      (and  (at_node n1) (not (at_node n2)) (visited n1)))
    (when (and (at_node n3) (edge_label n3 n4 ?label))
      (and  (at_node n4) (not (at_node n3)) (visited n4)))
    (when (and (at_node n3) (edge_label n3 n2 ?label))
      (and  (at_node n2) (not (at_node n3)) (visited n2)))
    (when (and (at_node n4) (edge_label n4 n5 ?label))
      (and  (at_node n5) (not (at_node n4)) (visited n5)))
    (when (and (at_node n4) (edge_label n4 n3 ?label))
      (and  (at_node n3) (not (at_node n4)) (visited n3)))
    (when (and (at_node n5) (edge_label n5 n6 ?label))
      (and  (at_node n6) (not (at_node n5)) (visited n6)))
    (when (and (at_node n5) (edge_label n5 n4 ?label))
      (and  (at_node n4) (not (at_node n5)) (visited n4)))
    (when (and (at_node n6) (edge_label n6 n7 ?label))
      (and  (at_node n7) (not (at_node n6)) (visited n7)))
    (when (and (at_node n6) (edge_label n6 n5 ?label))
      (and  (at_node n5) (not (at_node n6)) (visited n5)))
    (when (and (at_node n7) (edge_label n7 n0 ?label))
      (and  (at_node n0) (not (at_node n7)) (visited n0)))
    (when (and (at_node n7) (edge_label n7 n6 ?label))
      (and  (at_node n6) (not (at_node n7)) (visited n6)))
   ))
 )
